# download, read and list the resulting files from the zipped source document
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
zipFile <- "activity.zip"
if (!file.exists(zipFile)) {
message(paste("Downloding", zipFile))
download.file(fileUrl, destfile="activity.zip", method = "curl")
unzip(zipFile)
}else{
message(paste("File exists;", zipFile))
}
# Unzip & read the downloaded files
# unzip("activity.zip")
activity <<- read.csv("activity.csv")
#head(activity)
# list files in current dir
ls()
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$interval)),8)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$interval)),8)
# return results of mean and median calculations
paste0("The daily mean number of steps per day omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The daily median number of steps per day omiting 'NAs'is: ", mdtspd, sep = " ")
# set cran mirror
local({r <- getOption("repos")
r["CRAN"] <- "http://cran.r-project.org"
options(repos=r)
})
# set document options
knitr::opts_chunk$set(echo = TRUE)
# download, read and list the resulting files from the zipped source document
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
zipFile <- "activity.zip"
if (!file.exists(zipFile)) {
message(paste("Downloding", zipFile))
download.file(fileUrl, destfile="activity.zip", method = "curl")
unzip(zipFile)
}else{
message(paste("File exists;", zipFile))
}
# Unzip & read the downloaded files
# unzip("activity.zip")
activity <<- read.csv("activity.csv")
#head(activity)
# list files in current dir
ls()
library(lubridate)
# Get date and time stamp on the data download
# dated <- today()
timeN <- now()
paste0("Date downloaded: ", timeN, sep = " ")
# convert raw activity data class from char to date class
activity$date <- as.Date(activity$date)
# change weekday labels to lowercase letters
weekdays <- tolower(weekdays(as.Date(activity$date, abbreviate = TRUE)))
# use the aggregate function from dplyr to get the sum of the nunber of steps taken per day
totalstepsperday <- aggregate(steps ~ interval, activity, sum)
# calculate and round off the value of the mean
# mntspd <- round(mean(totalstepsperday$interval),6)
# mntspd
# mdtspd <- round(median(totalstepsperday$interval),6)
# mdtspd
# set the plot paramters
par (mfrow = c(1,1), mar = c(4, 4, 2, 1))
# create a plot using the histogram base plot method
with(totalstepsperday, hist(steps, main = "Total Steps Per Day (Oct & Nov 2012)", xlab = "Total - Steps per Day", ylab = "Frequency - Days", col = "brown"))
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$interval)),8)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$interval)),8)
# return results of mean and median calculations
paste0("The daily mean number of steps per day omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The daily median number of steps per day omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$interval)),8)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$interval)),8)
# return results of mean and median calculations
paste0("The mean daily number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),8)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),8)
# return results of mean and median calculations
paste0("The mean daily number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),2)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(activity$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(activity$steps)),2)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),2)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
library(Hmisc)
library(dplyr)
# renaming the data set to preserve the original data set
imputedDatamean <- activity
# install pagckages and libraries needed for for imputation of mising values
imputedDatamean$steps <- with(imputedDatamean, impute(steps, mean))
# renaming the data set to preserve the original data set
imputedDatamedian <- activity
# impute median step values for missing or NA values
imputedDatamedian$steps <- with(imputedDatamedian, impute(steps, median))
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# calculate the mean and median of the imputed total number of daily steps
# mtspdImp <- round(mean(totalstepsperdayImp1$interval),2)
# mdspdImp <- round(median(totalstepsperdayImp2$interval),2)
# return the message stating the value of the mean
# paste0("The mean total daily steps when imputing 'NAs' with the mean of total daily steps is; ", mtspdImp, sep = " ")
# set plot paramters
par (mfrow = c(1,2), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Steps Per Day (Oct & Nov 2012)", xlab = "Sum of Steps per Day using the Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Steps Per Day (Oct & Nov 2012)", xlab = "Sum of Steps per Day using the Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# calculate the mean and median of the imputed total number of daily steps
# mtspdImp <- round(mean(totalstepsperdayImp1$interval),2)
# mdspdImp <- round(median(totalstepsperdayImp2$interval),2)
# return the message stating the value of the mean
# paste0("The mean total daily steps when imputing 'NAs' with the mean of total daily steps is; ", mtspdImp, sep = " ")
# set plot paramters
par (mfrow = c(1,2), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),8)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),8)
# calculate the median also
paste0("The daily mean steps when omiting NAs is: ", mutspd, ", compared to the daily mean steps when imputing NAs: ", mntspd3, sep = " ")
paste0("The daily median steps when omitinf NAs is: ", mdtspd, ", compared to the daily median steps when imputing NAs: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The daily mean steps when omiting NAs is: ", mutspd, ", compared to the daily mean steps when imputing NAs: ", mntspd3, sep = " ")
paste0("The daily median steps when omiting NAs is: ", mdtspd, ", compared to the daily median steps when imputing NAs: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The daily mean steps when omiting NAs is: ", mutspd, ", compared to the daily mean steps when imputing NAs using the mean of the step values: ", mntspd3, sep = " ")
paste0("The daily median steps when omiting NAs is: ", mdtspd, ", compared to the daily median steps when imputing NAs using the medina of the step values: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The daily mean value for the steps variable when omiting NAs is: ", mutspd, ", compared to the daily mean steps when imputing NAs using the mean of the step values: ", mntspd3, sep = " ")
paste0("The daily median value for the steps variable when omiting NAs is: ", mdtspd, ", compared to the daily median steps when imputing NAs using the medina of the step values: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The total number of steps taken per day when omiting NAs is: ", mutspd, ", compared total number of steps per day when imputing the missing or NA values with the mean of the step value is: ", mntspd3, sep = " ")
paste0("The daily median value for the steps variable when omiting NAs is: ", mdtspd, ", compared to the daily median steps when imputing NAs using the medina of the step values: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The mean total number of steps taken per day when omiting NAs is: ", mutspd, ", compared to the mean total number of steps taken per day when imputing NAs with the mean of the step value is: ", mntspd3, sep = " ")
paste0("The median total number of steps taken per day when omiting NAs is: ", mdtspd, ", compared to the median total number of steps taken per day when imputing NAs with the median of the step values: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The MEAN total number of steps taken per day when omiting NAs was calculated to be: ", mutspd, ", compared to the MEAN total number of steps taken per day when imputing NAs with the mean of the step variable which is: ", mntspd3, sep = " ")
paste0("The MEDIAN total number of steps taken per day when omiting NAs is: ", mdtspd, ", compared to the MEDIAN total number of steps taken per day when imputing NAs with the median of the step values: ", mdtspd4, sep = " ")
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
# calculate the median also
paste0("The MEAN total number of steps taken per day when omiting NAs was calculated to be: ", mutspd, ", compared to the MEAN total number of steps taken per day when imputing the missing step values or NAs with the mean of the step variable resulting in: ", mntspd3, sep = " ")
paste0("The MEDIAN total number of steps taken per day when omiting NAs is: ", mdtspd, ", compared to the MEDIAN total number of steps taken per day when imputing NAs with the median of the step values: ", mdtspd4, sep = " ")
totalstepsperdayImp1
mean(totalstepsperdayImp1$steps
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
mean(totalstepsperdayImp1$steps)
mean(totalstepsperdayImp2)
mean(totalstepsperdayImp2$steps)
mean(totalstepsperdayImp1$steps)
mntspd3
mdtspd4# calculate the median also
mdtspd4 <- round(mean(totalstepsperdayImp2$steps),2)
mdtspd4# calculate the median also
mntspd3
mdtspd4# calculate the median also
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
mdtspd4# calculate the median also
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
mean(totalstepsperdayImp1$steps)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
mntspd3
mdtspd4# calculate the median also
# use the aggregate function from dplyr to get the sum of the nunber of steps taken
# per day for both missing or NA values inputed with both the mean and then the median
# totalstepsperday3 <- aggregate(steps ~ interval, totalstepsperdayImp1, sum)
# totalstepsperday4 <- aggregate(steps ~ interval, totalstepsperdayImp2, sum)
# calculate and round off the value of the mean
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
mntspd3
mdtspd4# calculate the median also
# use the aggregate function from dplyr to get the sum of the nunber of steps taken per day
totalstepsperday <- aggregate(steps ~ interval, activity, sum)
# calculate and round off the value of the mean
# mntspd <- round(mean(totalstepsperday$interval),6)
# mntspd
# mdtspd <- round(median(totalstepsperday$interval),6)
# mdtspd
# set the plot paramters
par (mfrow = c(1,1), mar = c(4, 4, 2, 1))
# create a plot using the histogram base plot method
with(totalstepsperday, hist(steps, main = "Total Steps Per Day (Oct & Nov 2012)", xlab = "Total - Steps per Day", ylab = "Frequency - Days", col = "brown"))
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),4)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),6)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the mean no. of steps taken by day of week
mutspd <- round(mean(na.omit(totalstepsperday$steps)),2)
# calculate the median no. of steps taken by day of week
mdtspd <- round(median(na.omit(totalstepsperday$steps)),2)
# return results of mean and median calculations
paste0("The mean daily total number of steps omiting 'NAs'is; ", mutspd, sep = " ")
paste0("The median daily total number of steps omiting 'NAs'is: ", mdtspd, sep = " ")
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# set plot paramters
par (mfrow = c(2,1), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# set plot paramters
par (mfrow = c(2,1), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Daily Steps (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# set plot paramters
par (mfrow = c(2,1), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Histogram of Total Daily Step Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Histogram of Total Daily Step Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# use the aggregate funcion to calculate the mean number of steps by day of the week
mudailysteps <-  aggregate(steps ~ interval, data = na.omit(activity), mean)
# create a line plot of the mean number of daily steps by daily interval
plot(steps ~ interval, data = mudailysteps, type = "l", main = "Average Daily Steps in 5-Minute Intervals (Oct - Nov 2012)", xlab = "Intervals / time of day ~ in 5-Minute Increments", ylab = "  Average Daily Steps")
# Create comparative daily means steps interval plot by weekday & weekend
dailystepsmean <- aggregate(steps ~ interval + typeday, Impv2, mean)
# Create comparative daily means steps interval plot by weekday & weekend
dailystepsmean <- aggregate(steps ~ interval + typeday, Impv2, mean)
library(dplyr)
# rename the data set
imputedDatamean2 <- imputedDatamean
# factor typeday
imputedDatamean$typeday <- as.factor(ifelse(weekdays(imputedDatamean$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
# Create comparative daily means steps interval plot by weekday & weekend
dailystepsmean <- aggregate(steps ~ interval + typeday, imputedDatamean, mean)
library(lattice)
xyplot(steps ~ interval | factor(typeday), data = dailystepsmean, aspect = .8, type = "l")
# calculate and round off the value of the mean total daily steps
mntspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
mntspd3
mdtspd4
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:" `mntspd3-mntspd`)
diff1 <- mntspd3 - mutspd
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:" diff1)
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1)
diff2 <- mdtspd4 - mdtspd
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff2)
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1)
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff2)
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1)
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed mean values for the NAs is:", diff2)
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1)
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed median values for the NAs is:", diff2)
percentDiff <- diff1/mutspd
percentDiff
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
percentDiff <- diff1/mutspd
percentDiff
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed median values for the NAs is:", diff2)
percentDiff <- diff1/mutspd
percentDiff <- round(percentDiff.2)
percentDiff <- round(percentDiff,2)
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
percentDiff <- diff1/mutspd
percentDiff
percentDiff <- round(percentDiff,2)*100
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed median values for the NAs is:", diff2)
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
percentDiff <- diff1/mutspd
percentDiff
percentDiff <- round(percentDiff,2)*100
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed median values for the NAs is:", diff2)
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
percentDiff <- diff1/mutspd
percentDiff <- round(percentDiff,2)*100
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using imputed median values for the NAs is:", diff2)
# calculate the number of rows containing NA values
totalnas <- sum(is.na(activity$steps))
# return results of that calculation
paste0("The total number of rows containing 'NA' values is: ", totalnas, sep = "")
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# set plot paramters
par (mfrow = c(1,2), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Histogram of Total Daily Step Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Histogram of Total Daily Step Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# calculate the daily sum of steps using both the mean and median values
totalstepsperdayImp1 <- aggregate(steps ~ interval, imputedDatamean, sum)
totalstepsperdayImp2 <- aggregate(steps ~ interval, imputedDatamedian, sum)
# set plot paramters
par (mfrow = c(1,2), mar = c(4, 4, 2, 1))
# create histogram
with(totalstepsperdayImp1, hist(steps, main = "Histogram of Total Daily Steps vs Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using  Imputed Mean for NA values", ylab = "Frequency", col = "brown"))
with(totalstepsperdayImp2, hist(steps, main = "Histogram of Total Daily Steps vs Frequency (Oct & Nov 2012)", xlab = "Sum of Steps per Day using Imputed Median for NA values", ylab = "Frequency", col = "brown"))
# calculate and round off the value of the mean total daily steps
mutspd3 <- round(mean(totalstepsperdayImp1$steps),2)
# calculate and round off the value of the median total daily steps
mdtspd4 <- round(median(totalstepsperdayImp2$steps),2)
diff1 <- mutspd3 - mutspd
diff2 <- mdtspd4 - mdtspd
percentDiff <- diff1/mutspd
percentDiff <- round(percentDiff,2)*100
paste("The difference between the mean total daily steps ingoring the NA values and the mean total daily steps using the imputed mean values for the NAs is:", diff1, "or", percentDiff,"%")
paste("The difference between the median total daily steps ingoring the NA values and the median total daily steps using the imputed median values for the NAs is:", diff2)
library(dplyr)
# rename the data set
imputedDatamean2 <- imputedDatamean
# factor typeday
imputedDatamean$typeday <- as.factor(ifelse(weekdays(imputedDatamean$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
# Create comparative daily means steps interval plot by weekday & weekend
dailystepsmean <- aggregate(steps ~ interval + typeday, imputedDatamean, mean)
library(lattice)
xyplot(steps ~ interval | factor(typeday), data = dailystepsmean, aspect = .8, type = "l")
# Capturing the results of the randomForest prediction on the test data set as results
results <- data.frame(problem_id= testing2$X.problem_id., classe = predictionstesting2)
#rm(list=ls())
local({r <- getOption("repos")
r["CRAN"] <- "http://cran.r-project.org"
options(repos=r)
})
setwd("~/Desktop/Coursera_R/Completed_Courses/8_PracticalMachineLearning/PracticalMachineLearning")
# Data
# The training data for this project are available here:
# https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv
# The test data are available here:
# https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv
# The data for this project come from this source:
# http://groupware.les.inf.puc-rio.br/har.
# Download the training data set
trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
csvTrainingFile <- "pml-training.csv"
if (!file.exists(csvTrainingFile)){
message(paste("Downloding", csvTrainingFile))
download.file(trainUrl, destfile="pml-training.csv", method = "curl")
}else{
message(paste("File exists;", csvTrainingFile))
}
dateDownLoaded <- date()
#rm(list=ls())
local({r <- getOption("repos")
r["CRAN"] <- "http://cran.r-project.org"
options(repos=r)
})
setwd("~/Desktop/Coursera_R/Completed_Courses/8_PracticalMachineLearning/PracticalMachineLearning")
# Data
# The training data for this project are available here:
# https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv
# The test data are available here:
# https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv
# The data for this project come from this source:
# http://groupware.les.inf.puc-rio.br/har.
# Download the training data set
trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
csvTrainingFile <- "pml-training.csv"
if (!file.exists(csvTrainingFile)){
message(paste("Downloding", csvTrainingFile))
download.file(trainUrl, destfile="pml-training.csv", method = "curl")
}else{
message(paste("File exists;", csvTrainingFile))
}
dateDownLoaded <- date()
# Capturing the results of the randomForest prediction on the test data set as results
results <- data.frame(problem_id= testing2$X.problem_id., classe = predictionstesting2)
setwd("~/Desktop/Coursera_R/Completed_Courses/9_DevelopingDataProducts/DDP_CourseProject")
